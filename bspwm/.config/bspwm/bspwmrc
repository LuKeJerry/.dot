#!/bin/zsh
# set -e
[[ "$TRACE" ]] && set -xv

#   ___.
#  \_ |__   ______________  _  _______
#   | __ \ /  ___/\____ \ \/ \/ /     \
#   | \_\ \\___ \ |  |_> >     /  Y Y  \
#   |___  /____  >|   __/ \/\_/|__|_|  /
#       \/     \/ |__|               \/

bspc config normal_border_color   '#282828'
bspc config focused_border_color  '#d5c4a1'
bspc config active_border_color   '#1d2021'

bspc config top_padding     8
bspc config left_padding    8
bspc config right_padding   8
bspc config bottom_padding  8

bspc config border_width	3
bspc config window_gap		18

bspc config split_ratio             0.50
bspc config single_monocle          true
bspc config gapless_monocle         true
bspc config borderless_monocle      true
bspc config paddingless_monocle     true


bspc config focus_follows_pointer   true
bspc config pointer_follows_monitor true
#
# * this creates a LOT of unexpected behaviors
# bspc config pointer_follows_focus   true

#                 _ _
#  _ __  ___ _ _ (_) |_ ___ _ _
# | '  \/ _ \ ' \| |  _/ _ \ '_|
# |_|_|_\___/_||_|_|\__\___/_|
#                  configuration
#
_hostname="$(hostname)"
case $_hostname in
    "ink")
        #  Thinkpad
        bspc monitor -d \
            $(echo -e '\uf109') $(echo -e '\uf121') $(echo -e '\uf120') $(echo -e '\uf07c') \
            $(echo -e '\uf0ac') $(echo -e '\uf0c3') $(echo -e '\uf141') $(echo -e '\uf001')
        ;;
    "lorenzo.mb")
        bspc monitor HDMI2 -d I  II  III  IV V
        bspc monitor VGA1 -d VI VII VIII IX X
        ;;
    "meila")
        bspc monitor ^1 -d 1 2 3 4 5
        bspc monitor ^2 -d 6 7 8 9 0
        ;;
    *)
        #  Anyone else
        #  5 screens for each monitor
        i=1
        for monitor in $(bspc query -M); do
            bspc monitor $monitor \
                -n "$i" \
                -a $i/{i,ii,iii,iv,v}
            let i++
        done
        NMON=$i
        unset i
        ;;
esac

#      node _
#  _ _ _  _| |___ ___
# | '_| || | / -_|_-<
# |_|  \_,_|_\___/__/

# Clear the rules before adding any
while read -r rule _; do bspc rule -r "$rule"; done < <(bspc rule -l)

bspc rule -a monitor=0 split_dir=east

bspc rule -a pcmanfm    desktop=^4 follow=off floating=off
bspc rule -a Gimp       desktop=^6 follow=on floating=on
bspc rule -a Chrome     desktop=^5 follow=on floating=off
bspc rule -a xmessage           floating=on --center --focus
bspc rule -a Dialog             floating=on --center --focus
bspc rule -a htop               floating=on --center
bspc rule -a display            floating=on --center
bspc rule -a display.im6        floating=on --center
bspc rule -a xev                floating=on --center
bspc rule -a orage              floating=on --center
bspc rule -a trayer             floating=on --sticky
bspc rule -a lxpolkit           sticky=on locked=on
bspc rule -a 'Copying files'    floating=on
bspc rule -a git-cola           floating=on
bspc rule -a mpv                floating=on sticky=on --center --focus

bspc rule -a GtkFileChooserDialog   floating=on --center --focus
bspc rule -a '_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on --center --focus
bspc rule -a '_NET_WM_WINDOW_TYPE_DIALOG' floating=on --center --focus
bspc rule -a '_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' floating=on --center --focus

# reclaim orphan windows
bspc wm -o

# add scripts to $PATH for sxhkd
export PATH=$PATH:$HOME/.config/bspwm/scripts
export SXHKD_SHELL=/bin/dash

# start
if pgrep -u $USER sxhkd >/dev/null 2>&1
then
    true
else
    sxhkd &
fi
